pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your-repo.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build('your-image-name')
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-credentials-id') {
                        docker.image('your-image-name').push('latest')
                    }
                }
            }
        }
        stage('Update Manifests') {
            steps {
                script {
                    sh "sed -i 's/image:.*/image: your-image-name:latest/' k8s/deployment.yaml"
                    sh "git add k8s/deployment.yaml"
                    sh "git commit -m 'Update image to latest'"
                    sh "git push"
                }
            }
        }
        stage('Trigger Argo CD Sync') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'argocd-token', variable: 'ARGOCD_TOKEN')]) {
                        sh 'argocd app sync my-app --auth-token ${ARGOCD_TOKEN}'
                    }
                }
            }
        }
    }
}
